name: AGE CI

on: push

env:
  ARTIFACT_NAME: age-artifacts
  ARTIFACT_PATH: build/artifacts

jobs:

  ###############################################################################
  ##
  ##   build
  ##
  ###############################################################################

  build-qt:
    name: build Qt applications
    runs-on: ubuntu-20.04
    steps:
      # https://github.com/jurplel/install-qt-action
      - name: cache Qt
        id: cache-qt
        uses: actions/cache@v3
        with:
          path: ../Qt
          key: ${{ runner.os }}-Qt-cache-5.12.8

      - name: install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: '5.12.8'
          cached: ${{ steps.cache-qt.outputs.cache-hit }}

      - name: checkout code
        uses: actions/checkout@v3

      - name: build AGE
        run: build/age_ci.sh build-qt release

      - name: upload Qt artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}


  build-gtest:
    name: build Google Test binary
    runs-on: ubuntu-20.04
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: build Google Test binary
        run: build/age_ci.sh build-gtest Debug

      - name: upload Google Test artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}


  build-tester:
    name: build tester binary
    runs-on: ubuntu-20.04
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: build tester binary
        run: build/age_ci.sh build-tester Release

      - name: upload tester artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}


  build-wasm:
    name: build WebAssembly binary
    runs-on: ubuntu-20.04
    container:
      image: emscripten/emsdk:2.0.25
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: build binaries
        run: build/age_ci.sh build-wasm Release

      - name: upload WebAssembly artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}


  ###############################################################################
  ##
  ##   test
  ##
  ###############################################################################

  gtest:
    name: run AGE test suite
    runs-on: ubuntu-20.04
    needs: [ build-gtest ]
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}

      - name: run test suite
        run: build/age_ci.sh run-gtest


  test-acid2:
    name: run dmg-acid2 and cgb-acid2 tests
    runs-on: ubuntu-20.04
    needs: [ build-tester ]
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}

      - name: run tests
        run: build/age_ci.sh run-tests acid2


  test-age:
    name: run age-test-roms
    runs-on: ubuntu-20.04
    needs: [ build-tester ]
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}

      - name: run tests
        run: build/age_ci.sh run-tests age


  test-blargg:
    name: run Blargg's test suite
    runs-on: ubuntu-20.04
    needs: [ build-tester ]
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}

      - name: run tests
        run: build/age_ci.sh run-tests blargg


  test-gambatte:
    name: run Gambatte test suite
    runs-on: ubuntu-20.04
    needs: [ build-tester ]
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}

      - name: run tests
        run: build/age_ci.sh run-tests gambatte


  test-mooneye:
    name: run Mooneye Test Suite
    runs-on: ubuntu-20.04
    needs: [ build-tester ]
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}

      - name: run tests
        run: build/age_ci.sh run-tests mooneye
